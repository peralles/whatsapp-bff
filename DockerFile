# Stage 1: Build
FROM node:20-slim AS builder

WORKDIR /app

# Install system dependencies for Prisma
RUN apt-get update && apt-get install -y openssl ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Install yarn
RUN corepack enable yarn

# Copy package files
COPY package*.json yarn.lock ./
COPY prisma ./prisma/

# Install dependencies
RUN yarn install --frozen-lockfile --production=false

# Copy source
COPY . .

# Generate Prisma client
RUN yarn prisma generate

# Build application
RUN yarn build

# Stage 2: Production
FROM node:20-slim AS runner

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y openssl ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN addgroup --system --gid 1001 nodejs \
    && adduser --system --uid 1001 nestjs

# Copy build artifacts and necessary files
COPY --from=builder --chown=nestjs:nodejs /app/dist ./dist
COPY --from=builder --chown=nestjs:nodejs /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=builder --chown=nestjs:nodejs /app/package*.json ./
COPY --from=builder --chown=nestjs:nodejs /app/prisma ./prisma

# Install production dependencies only
RUN yarn install --frozen-lockfile --production=true

# Security configurations
USER nestjs
ENV NODE_ENV production
ENV PORT 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s \
  CMD curl -f http://localhost:${PORT}/health || exit 1

EXPOSE ${PORT}
CMD ["node", "dist/main"]